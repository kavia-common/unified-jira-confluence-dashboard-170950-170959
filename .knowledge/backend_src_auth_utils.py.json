{"is_source_file": true, "format": "Python", "description": "This file provides utility functions for handling authentication processes with Atlassian APIs, including session management, OAuth state management, URL building, token exchange, and user info validation.", "external_files": ["src.models.auth", "src.config.settings", "httpx"], "external_methods": ["httpx.AsyncClient", "response.post", "response.get", "response.json"], "published": ["generate_session_id", "generate_oauth_state", "store_oauth_state", "validate_oauth_state", "store_session", "get_session", "delete_session", "build_oauth_url", "exchange_code_for_token", "get_user_info", "validate_api_token"], "classes": [], "methods": [{"name": "str generate_session_id()", "description": "Generates a unique identifier for user sessions.", "scope": "", "scopeKind": ""}, {"name": "str generate_oauth_state()", "description": "Creates a secure, random OAuth state token.", "scope": "", "scopeKind": ""}, {"name": "None store_oauth_state(state: str, provider: str, redirect_uri: str)", "description": "Stores OAuth state information linked to provider and redirect URI.", "scope": "", "scopeKind": ""}, {"name": "bool validate_oauth_state(state: str, provider: str)", "description": "Validates the OAuth state parameter and cleans up used state.", "scope": "", "scopeKind": ""}, {"name": "None store_session(session_id: str, token_info: TokenInfo)", "description": "Stores session token information in memory.", "scope": "", "scopeKind": ""}, {"name": "Optional[TokenInfo] get_session(session_id: str)", "description": "Retrieves session token info based on session ID.", "scope": "", "scopeKind": ""}, {"name": "bool delete_session(session_id: str)", "description": "Removes a session from in-memory store.", "scope": "", "scopeKind": ""}, {"name": "str build_oauth_url(provider: str, redirect_uri: str, state: str)", "description": "Constructs an OAuth authorization URL with appropriate query parameters based on provider.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict] exchange_code_for_token(code: str, redirect_uri: str)", "description": "Exchanges OAuth authorization code for access token via Atlassian token URL asynchronously.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict] get_user_info(access_token: str)", "description": "Fetches user info from Atlassian API using provided access token asynchronously.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict] validate_api_token(domain: str, email: str, api_token: str, provider: str)", "description": "Validates API credentials for Jira or Confluence by making a test API request.", "scope": "", "scopeKind": ""}], "calls": ["httpx.AsyncClient()", "client.post()", "client.get()", "response.json()"], "search-terms": ["auth utilities", "OAuth state management", "session storage", "Atlassian OAuth", "token exchange", "user info retrieval"], "state": 2, "file_id": 10, "knowledge_revision": 26, "git_revision": "998ad53cc0383c8c67203f15412e00d14f625c7d", "revision_history": [{"20": ""}, {"26": "998ad53cc0383c8c67203f15412e00d14f625c7d"}], "ctags": [{"_type": "tag", "name": "build_oauth_url", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^def build_oauth_url(provider: str, redirect_uri: str, state: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(provider: str, redirect_uri: str, state: str)"}, {"_type": "tag", "name": "delete_session", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^def delete_session(session_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(session_id: str)"}, {"_type": "tag", "name": "exchange_code_for_token", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^async def exchange_code_for_token(code: str, redirect_uri: str) -> Optional[Dict]:$/", "language": "Python", "typeref": "typename:Optional[Dict]", "kind": "function", "signature": "(code: str, redirect_uri: str)"}, {"_type": "tag", "name": "generate_oauth_state", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^def generate_oauth_state() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "generate_session_id", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^def generate_session_id() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_session", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^def get_session(session_id: str) -> Optional[TokenInfo]:$/", "language": "Python", "typeref": "typename:Optional[TokenInfo]", "kind": "function", "signature": "(session_id: str)"}, {"_type": "tag", "name": "get_user_info", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^async def get_user_info(access_token: str) -> Optional[Dict]:$/", "language": "Python", "typeref": "typename:Optional[Dict]", "kind": "function", "signature": "(access_token: str)"}, {"_type": "tag", "name": "oauth_states", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^oauth_states: Dict[str, Dict[str, str]] = {}$/", "language": "Python", "typeref": "typename:Dict[str, Dict[str, str]]", "kind": "variable"}, {"_type": "tag", "name": "session_store", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^session_store: Dict[str, TokenInfo] = {}$/", "language": "Python", "typeref": "typename:Dict[str, TokenInfo]", "kind": "variable"}, {"_type": "tag", "name": "store_oauth_state", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^def store_oauth_state(state: str, provider: str, redirect_uri: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(state: str, provider: str, redirect_uri: str)"}, {"_type": "tag", "name": "store_session", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^def store_session(session_id: str, token_info: TokenInfo) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(session_id: str, token_info: TokenInfo)"}, {"_type": "tag", "name": "validate_api_token", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^async def validate_api_token(domain: str, email: str, api_token: str, provider: str) -> Optional/", "language": "Python", "typeref": "typename:Optional[Dict]", "kind": "function", "signature": "(domain: str, email: str, api_token: str, provider: str)"}, {"_type": "tag", "name": "validate_oauth_state", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/auth/utils.py", "pattern": "/^def validate_oauth_state(state: str, provider: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(state: str, provider: str)"}], "hash": "3d36a46d878202d047078e66f60a1321", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/auth/utils.py", "fields": [{"name": "Dict[str, Dict[str, str]] oauth_states", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, TokenInfo] session_store", "scope": "", "scopeKind": "", "description": "unavailable"}]}