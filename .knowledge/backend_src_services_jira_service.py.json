{"is_source_file": true, "format": "Python", "description": "This file defines a Python service class for interacting with the Jira API, including methods for fetching projects and project details, handling authentication, and error management.", "external_files": ["src/models/auth.py"], "external_methods": ["TokenInfo", "AuthMethod"], "published": ["JiraService", "JiraServiceError"], "classes": [{"name": "JiraServiceError", "description": "Custom exception class for errors related to Jira service operations."}, {"name": "JiraService", "description": "Main service class encapsulating methods for Jira API interactions, including project retrieval and validation."}], "methods": [{"name": "__init__(self, token_info: TokenInfo)", "description": "Constructor initializing JiraService with authentication information.", "scope": "JiraService", "scopeKind": "class"}, {"name": "str _get_base_url(self)", "description": "Determines the base URL for Jira API depending on authentication method.", "scope": "JiraService", "scopeKind": "class"}, {"name": "Dict[str,str] _get_headers(self)", "description": "Generates appropriate HTTP headers for authentication based on auth method.", "scope": "JiraService", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] get_projects(self)", "description": "Asynchronously fetches a list of Jira projects accessible with provided credentials.", "scope": "JiraService", "scopeKind": "class"}, {"name": "Optional[Dict[str,Any]] get_project_details(self, project_key: str)", "description": "Fetches detailed information for a specific project identified by project key.", "scope": "JiraService", "scopeKind": "class"}, {"name": "bool validate_connection(self)", "description": "Checks if the Jira API connection is operational with current credentials.", "scope": "JiraService", "scopeKind": "class"}], "calls": ["client.get", "httpx.AsyncClient", "base64.b64encode"], "search-terms": ["jira_service", "get_projects", "get_project_details", "API_TOKEN", "OAuth", "project list", "project details", "Jira API interactions"], "state": 2, "file_id": 13, "knowledge_revision": 55, "git_revision": "", "revision_history": [{"30": ""}, {"55": ""}], "ctags": [{"_type": "tag", "name": "JiraService", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/services/jira_service.py", "pattern": "/^class JiraService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "JiraServiceError", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/services/jira_service.py", "pattern": "/^class JiraServiceError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/services/jira_service.py", "pattern": "/^    def __init__(self, token_info: TokenInfo):$/", "language": "Python", "kind": "member", "signature": "(self, token_info: TokenInfo)", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "_get_base_url", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/services/jira_service.py", "pattern": "/^    def _get_base_url(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "_get_headers", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/services/jira_service.py", "pattern": "/^    def _get_headers(self) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self)", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "get_project_details", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/services/jira_service.py", "pattern": "/^    async def get_project_details(self, project_key: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "(self, project_key: str)", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "get_projects", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/services/jira_service.py", "pattern": "/^    async def get_projects(self) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self)", "scope": "JiraService", "scopeKind": "class"}, {"_type": "tag", "name": "validate_connection", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/services/jira_service.py", "pattern": "/^    async def validate_connection(self) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self)", "scope": "JiraService", "scopeKind": "class"}], "hash": "390e670c57708b4b97f4224f003e51b0", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/services/jira_service.py"}