{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for Jira integration using FastAPI. It includes route handlers for fetching Jira projects, project details, and connection validation, relying on a JiraService class for backend interactions. The file contains route definitions, dependency handling, and error management for Jira-related operations.", "external_files": ["src/services/jira_service", "src/auth/utils", "src/utils/error_handler"], "external_methods": ["JiraService", "JiraServiceError", "get_session", "APIErrorHandler.create_success_response", "APIErrorHandler.handle_service_error", "log_api_error"], "published": ["get_projects", "get_project_details", "validate_connection"], "classes": [{"name": "JiraService", "description": "Class handling interactions with Jira API, including fetching projects, project details, and validating connections."}], "methods": [{"name": "JiraService get_jira_service(session_id: Optional[str] = Cookie(None))", "description": "Dependency function to obtain an authenticated JiraService instance based on session cookie.", "scope": "", "scopeKind": ""}, {"name": "get_projects(jira_service: JiraService = Depends(get_jira_service))", "description": "API endpoint to retrieve all accessible Jira projects for the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "get_project_details( project_key: str, jira_service: JiraService = Depends(get_jira_service) )", "description": "API endpoint to fetch detailed information for a specific Jira project.", "scope": "", "scopeKind": ""}, {"name": "validate_connection(jira_service: JiraService = Depends(get_jira_service))", "description": "API endpoint to validate current Jira connection/authentication.", "scope": "", "scopeKind": ""}], "calls": ["jira_service.get_projects", "jira_service.get_project_details", "jira_service.validate_connection", "get_session", "APIErrorHandler.create_success_response", "APIErrorHandler.handle_service_error", "log_api_error"], "search-terms": ["Jira API endpoints", "FastAPI route handlers", "project details", "connection validation", "session dependency", "error handling"], "state": 2, "file_id": 16, "knowledge_revision": 53, "git_revision": "", "revision_history": [{"36": ""}, {"50": ""}, {"53": ""}], "ctags": [{"_type": "tag", "name": "get_jira_service", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/api/endpoints/jira.py", "pattern": "/^async def get_jira_service(session_id: Optional[str] = Cookie(None)) -> JiraService:$/", "language": "Python", "typeref": "typename:JiraService", "kind": "function", "signature": "(session_id: Optional[str] = Cookie(None))"}, {"_type": "tag", "name": "get_project_details", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/api/endpoints/jira.py", "pattern": "/^async def get_project_details($/", "language": "Python", "kind": "function", "signature": "( project_key: str, jira_service: JiraService = Depends(get_jira_service) )"}, {"_type": "tag", "name": "get_projects", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/api/endpoints/jira.py", "pattern": "/^async def get_projects(jira_service: JiraService = Depends(get_jira_service)):$/", "language": "Python", "kind": "function", "signature": "(jira_service: JiraService = Depends(get_jira_service))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/api/endpoints/jira.py", "pattern": "/^router = APIRouter(prefix=\"\\/jira\", tags=[\"Jira\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "validate_connection", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-dashboard-170950-170959/backend/src/api/endpoints/jira.py", "pattern": "/^async def validate_connection(jira_service: JiraService = Depends(get_jira_service)):$/", "language": "Python", "kind": "function", "signature": "(jira_service: JiraService = Depends(get_jira_service))"}], "hash": "81735591996741cd10e2b34b50c6c480", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/endpoints/jira.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/jira\", tags=[\"Jira\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}